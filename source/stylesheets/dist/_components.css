@import url(http://fonts.googleapis.com/css?family=Yanone+Kaffeesatz|Open+Sans:400italic,400,600,700,300);
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */

/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined in IE 8/9.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
    display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */

audio,
canvas,
video {
    display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
    display: none;
    height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */

[hidden],
template {
    display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
    font-family: sans-serif; /* 1 */
    -ms-text-size-adjust: 100%; /* 2 */
    -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
    margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
    background: transparent;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */

a:focus {
    outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
    outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */

h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */

abbr[title] {
    border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */

b,
strong {
    font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */

dfn {
    font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
    box-sizing: content-box;
    height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
    background: #ff0;
    color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */

code,
kbd,
pre,
samp {
    font-family: monospace, serif;
    font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */

pre {
    white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */

q {
    quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
    font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sup {
    top: -0.5em;
}

sub {
    bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9.
 */

img {
    border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */

svg:not(:root) {
    overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari 5.
 */

figure {
    margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 0.125rem;
    padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
    border: 0; /* 1 */
    padding: 0; /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */

button,
input,
select,
textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 2 */
    margin: 0; /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

button,
input {
    line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */

button,
select {
    text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
    -webkit-appearance: button; /* 2 */
    cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
    cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
    -webkit-appearance: textfield; /* 1 */ /* 2 */
    box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
    border: 0;
    padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */

textarea {
    overflow: auto; /* 1 */
    vertical-align: top; /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
    border-collapse: collapse;
    border-spacing: 0;
}

/**
 * SUIT
 */
/** @define Grid; use strict */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 * 3. Ensure consistent default alignment.
 */

.Grid {
  display: block; /* 1 */
  font-size: 0; /* 2 */
  margin: 0; /* 1 */
  padding: 0; /* 1 */
  text-align: left; /* 3 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  text-align: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  text-align: right;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle > .Grid-cell {
  vertical-align: middle;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom > .Grid-cell {
  vertical-align: bottom;
}

/**
 * Modifier: gutters
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.Grid--withGutter {
  margin: 0 -0.78125rem;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 0.78125rem;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font size change made in `Grid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */

.Grid-cell {
  box-sizing: border-box;
  display: inline-block; /* 1 */
  font-size: 1rem; /* 2 */
  margin: 0;
  padding: 0;
  text-align: left; /* 3 */
  vertical-align: top; /* 4 */
  width: 100%; /* 5 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  display: block;
  margin: 0 auto;
}
/**
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf:before,
.u-cf:after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.u-cf:after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
  display: table-cell !important; /* 1 */
  width: 10000px !important; /* 2 */
}

/**
 * Floats
 */

.u-floatLeft {
  float: left !important;
}

.u-floatRight {
  float: right !important;
}
/**
 * Sizing utilities
 */

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit,
.u-sizeFitAlt {
  display: block !important;
  float: left !important;
  width: auto !important;
}

.u-sizeFitAlt {
  float: right !important;
}

/**
 * Make an element fill the remaining space.
 * N.B. This will hide overflow.
 */

.u-sizeFill {
  display: block !important;
  overflow: hidden !important;
  width: auto !important;
}

/**
 * An alternative method to make an element fill the remaining space.
 * N.B. Do not use if child elements might be wider than the remaining space.
 * In Chrome, Safari, and Firefox it results in undesired layout.
 */

.u-sizeFillAlt {
  display: table-cell !important;
  max-width: 100% !important;
  width: 10000px !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 */

.u-size1of12 {
  width: 8.33333% !important;
}

.u-size1of10 {
  width: 10% !important;
}

.u-size1of8 {
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  width: 16.66667% !important;
}

.u-size1of5,
.u-size2of10 {
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important;
}

.u-size3of10 {
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.33333% !important;
}

.u-size3of8 {
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  width: 40% !important;
}

.u-size5of12 {
  width: 41.66667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important;
}

.u-size7of12 {
  width: 58.33333% !important;
}

.u-size3of5,
.u-size6of10 {
  width: 60% !important;
}

.u-size5of8 {
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.66667% !important;
}

.u-size7of10 {
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  width: 83.33333% !important;
}

.u-size7of8 {
  width: 87.5% !important;
}

.u-size9of10 {
  width: 90% !important;
}

.u-size11of12 {
  width: 91.66667% !important;
}
/**
 * Size: breakpoint 2 (medium)
 */

@media (min-width: 49.375em) {

  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit,
  .u-md-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-md-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-md-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-md-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 2 (medium)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-md-size1of12 {
    width: 8.33333% !important;
  }

  .u-md-size1of10 {
    width: 10% !important;
  }

  .u-md-size1of8 {
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    width: 16.66667% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important;
  }

  .u-md-size3of10 {
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: 33.33333% !important;
  }

  .u-md-size3of8 {
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important;
  }

  .u-md-size5of12 {
    width: 41.66667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important;
  }

  .u-md-size7of12 {
    width: 58.33333% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important;
  }

  .u-md-size5of8 {
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: 66.66667% !important;
  }

  .u-md-size7of10 {
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    width: 83.33333% !important;
  }

  .u-md-size7of8 {
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    width: 90% !important;
  }

  .u-md-size11of12 {
    width: 91.66667% !important;
  }

}
/**
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 49.375em) {

  .u-md-beforeNone {
    margin-left: 0 !important;
  }

  .u-md-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-md-before1of10 {
    margin-left: 10% !important;
  }

  .u-md-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-md-before1of6,
  .u-md-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-md-before1of5,
  .u-md-before2of10 {
    margin-left: 20% !important;
  }

  .u-md-before1of4,
  .u-md-before2of8,
  .u-md-before3of12 {
    margin-left: 25% !important;
  }

  .u-md-before3of10 {
    margin-left: 30% !important;
  }

  .u-md-before1of3,
  .u-md-before2of6,
  .u-md-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-md-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-md-before2of5,
  .u-md-before4of10 {
    margin-left: 40% !important;
  }

  .u-md-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-md-before1of2,
  .u-md-before2of4,
  .u-md-before3of6,
  .u-md-before4of8,
  .u-md-before5of10,
  .u-md-before6of12 {
    margin-left: 50% !important;
  }

  .u-md-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-md-before3of5,
  .u-md-before6of10 {
    margin-left: 60% !important;
  }

  .u-md-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-md-before2of3,
  .u-md-before4of6,
  .u-md-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-md-before7of10 {
    margin-left: 70% !important;
  }

  .u-md-before3of4,
  .u-md-before6of8,
  .u-md-before9of12 {
    margin-left: 75% !important;
  }

  .u-md-before4of5,
  .u-md-before8of10 {
    margin-left: 80% !important;
  }

  .u-md-before5of6,
  .u-md-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-md-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-md-before9of10 {
    margin-left: 90% !important;
  }

  .u-md-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/**
 * Common
 */
html {
  box-sizing: border-box;
  font-size: 1rem;
}

/* http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
*, *::before, *::after {
  box-sizing: inherit;
}

body {
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #434;
}

a {
  color: #0071ac;
  text-decoration: none;
  -webkit-transition: color .15s ease;
          transition: color .15s ease
}

a:hover {
    color: #ac6cae;
    text-decoration: underline;
}

img {
  max-width: 100%;
  height: auto;
}

h1 {
  font-size: 2rem;
  color: #222;
  font-weight: 600;
}

h2 {
  font-size: 1.75rem;
}

h3 {
  font-size: 1.5rem;
}

h4 {
  font-size: 1.25rem;
}

h2, h3, h4 {
  font-weight: 400;
  color: #111;
}

blockquote {
  border-left: 5px solid #ccc;
  padding-left: 0.625rem;
  color: #888;
  margin: 1.25rem 0 1.25rem 1.25rem;
}

code {
  font-family: Monaco, Consolas, "Lucida Console", monospace;
  background-color: #f2f2f2;
  border: 1px solid #ddd;
  font-size: .875rem;
}

/**
 * Colors
 */

/* Grays */

/* Main colors */

/**
 * Fonts
 */

/**
 * Grid
 */

/**
 * Components
 */
/**
 * Highlight
 */

.highlight {
  font-size: 0.875rem;
  border-radius: 5px;
  padding: 0.625rem;
  margin: 1.25rem 0;
  overflow: auto;
  display: block;
}

.highlight > table {
  width: 100%;
}

.lineno {
  color: #aaa;
}

pre {
  display: block;
  white-space: pre;
  word-wrap: normal;
  overflow: auto;
  width: auto;
  margin: 0;
}
/** @define Icon */

@font-face {
  font-family: "Flaticon";
  src: url("/fonts/flaticon.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

.Icon:before {
  font-family: "Flaticon";
  display: inline-block;
  vertical-align: middle;
  font-style: normal;
  background: transparent;
  font-weight: normal;
  font-variant: normal;
  line-height: 1;
  text-decoration: inherit;
  text-rendering: optimizeLegibility;
  text-transform: none;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

.Icon--link:before {
  content: "\e003";
}

.Icon--github:before {
  content: "\e001";
}

.Icon--twitter:before {
  content: "\e005";
}

.Icon--instagram:before {
  content: "\e002";
}

.Icon--linkedin:before {
  content: "\e004";
}

.Icon--email:before {
  content: "\e000";
}

.Icon--xxs {
  font-size: 0.625rem !important;
  line-height: 10px;
}

.Icon--xs {
  font-size: 0.75rem !important;
  line-height: 12px;
}

.Icon--sm {
  font-size: 0.875rem !important;
  line-height: 14px;
}

.Icon--md {
  font-size: 1rem !important;
  line-height: 16px;
}

.Icon--lg {
  font-size: 1.125rem !important;
  line-height: 16px;
}

.Icon--xlg {
  font-size: 1.25rem !important;
  line-height: 20px;
}

.Icon--xxlg {
  font-size: 1.75rem !important;
  line-height: 28px;
}
/** @define Container */

.Container {
  width: 95%;
  margin: 0 auto;
  max-width: 980px;
}

.Container--main {
  padding-bottom: 2.5rem;
}
/** @define Entry; weak */

/** @define utilities; weak */

.u-linkMuted {
  color: #434
}

.u-linkMuted:hover {
    color: #888;
}

.u-linkUnderline {
  border-bottom: 1px dotted;
  text-decoration: none;
}

.u-linkNoDecoration {
  text-decoration: none !important;
}

.Entry-header {
  margin-bottom: 1.5625rem;
}

.Entry-title {
  margin-bottom: 0.3125rem;
}

.Entry-date {
  color: #888;
}

.Entry-body h2, .Entry-body h3, .Entry-body h4, .Entry-body h5, .Entry-body h6 {
    position: relative
}

.Entry-body h2:hover .Entry-anchor, .Entry-body h3:hover .Entry-anchor, .Entry-body h4:hover .Entry-anchor, .Entry-body h5:hover .Entry-anchor, .Entry-body h6:hover .Entry-anchor {
    display: block;
}

.Entry-wrapImg {
  text-align: center;
  margin: 1.25rem 0;
}

.Entry-img {
  border: 1px solid #aaa;
  display: inline-block;
}

.Entry-anchor {
  display: none;
  color: inherit;
  margin-left: -1.375rem;
  padding-right: 1.25rem;
  bottom: 5px;
  position: absolute
}

.Entry-anchor:hover {
    color: #111;
}
/** @define EntryList */

/**
 * utils-list
 */

/* Definition lists
   ========================================================================== */

/**
 * Remove default styling
 */

.u-dlUnstyled > dd {
  margin-left: 0;
}

/**
 * Display definition lists inline
 */

.u-dlInline dt,
.u-dlInline dd {
  display: inline-block;
  margin-left: 0;
  margin-right: 0.1875rem;
}

/* Standard lists
   ========================================================================== */

/**
 * Remove default styling
 */

.u-listUnstyled {
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

/**
 * Display list items inline
 **/

.u-listInline {
  padding-left: 0;
  margin-left: -0.3125rem;
  list-style: none;
}

.u-listInline > li {
  display: inline-block;
  padding-right: 0.3125rem;
  padding-left: 0.3125rem;
}

.EntryList-item {
  margin-bottom: 0.625rem;
}
/** @define Header */

/** @define Nav */

/**
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  position: absolute !important;
  overflow: hidden !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%; /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}

.Nav {
  text-align: center;
  text-transform: lowercase;
}

.Nav-list {
  margin: 0;
}

.Nav-item {
  display: inline-block;
  margin-right: 0.625rem
}

.Nav-item:last-child {
    margin-right: 0;
}

.Nav-item.is-active .Nav-link{
  color: #547BCE;
}

.Nav-link {
  text-decoration: none;
}

@media (min-width: 49.375em) {
  .Nav {
    text-align: right;
  }
}
/** @define Logo */

.Logo {
  text-align: center;
  display: block;
  color: inherit;
  font-family: "Yanone Kaffeesatz", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.Logo-title {
  font-size: 2rem;
  margin: 0;
}

.Logo-subtitle {
  margin: 0;
  font-size: 1.125rem;
  text-transform: lowercase;
}

@media (min-width: 49.375em) {
  .Logo {
    background-color: #f4f4f4;
    border-right: 1px solid #ccc;
    border-left: 1px solid #ccc;
    padding: 0.3125rem;
  }

  .Logo-subtitle, .Logo-title {
    display: block;
  }
}

.Header {
  border-bottom: 1px solid #eee;
  padding-bottom: 0.625rem;
}

.Header-wrapLogo {
  margin-bottom: 0.625rem;
}

@media (min-width: 49.375em) {
  .Header {
    padding-bottom: 0;
  }

  .Header-wrapLogo {
    margin-bottom: 0;
  }
}
/** @define Aside */

/** @define Profile; weak */

/** @define Avatar */

/** @define utilities */

.u-imgCircle {
  border-radius: 50%;
}

.Avatar {
  border: 1px solid #ccc;
  background-color: #fff;
  padding: 0.125rem;
  width: 90px;
  display: inline-block;
}

.Profile,
.Profile-wrapAvatar,
.Profile-body {
  text-align: center;
}

.Profile > p {
  margin: 0;
}

.Profile-text {
  font-size: 0.875rem
}

.Profile-text:last-of-type {
    margin-bottom: 0;
}

@media (min-width: 30.625em){
  .Profile {
    width: 80%;
    margin-left: auto;
    margin-right: auto;
  }

  .Profile-wrapAvatar {
    float: left;
    margin-top: 0.3125rem;
    margin-right: 0.9375rem;
  }

  .Profile-body {
    text-align: left;
  }
}

@media (min-width: 49.375em) {
  .Profile {
    padding: 0.625rem;
    width: auto;
    margin-left: 0;
    margin-right: 0;
  }

  .Profile-wrapAvatar {
    margin-right: 0;
    float: none;
  }
}
/** @define Contact; weak */

/** @define utilities */

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */

.u-textKern {
  text-rendering: optimizeLegibility; /* 1 */
  -webkit-font-feature-settings: "kern" 1;
     -moz-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1; /* 2 */
  -webkit-font-kerning: normal;
     -moz-font-kerning: normal;
          font-kerning: normal; /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%; /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important; /* 2 */
}

.u-textLower {
  text-transform: lowercase;
}

.u-textLead {
  font-size: 1.25rem;
}
/**
 * @define utilities
 *
 * Used to override styles on components without need for
 * additional modifier classes
 *
 * Usage:
 *  <div class="u-mbZ"> // margin-bottom: 0
 *  <div class="u-mt20"> // margin-top: 20px
 *  <div class="u-m25"> // margin: 25px
 */

.u-p10 {
  padding: 0.625rem;
}

.u-pt30 {
  padding-top: 1.875rem;
}

.Contact {
  margin: auto;
  width: 60%;
  font-size: 0.875rem;
}

.Contact-list {
  margin: 0;
}

.Contact-header {
  font-size: 1.125rem;
  text-align: center;
  margin-top: 0;
  margin-bottom: 0.625rem;
}

.Contact-item {
  margin-bottom: 0.375rem;
  text-transform: lowercase
}

.Contact-item .Icon {
    margin-right: 0.1875rem;
}

@media (min-width: 30.625em) {
  .Contact {
    width: 80%;
  }

  .Contact-header {
    text-align: left;
  }
}

@media (min-width: 49.375em) {
  .Contact {
    width: auto;
  }
}

.Aside--roundBtm {
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

.Aside-item--shiftUp {
  margin-top: -0.0625rem;
}

@media (min-width: 49.375em) {
  .Aside {
    background-color: #f4f4f4;
    border: 1px solid #ccc;
    border-top: 0;
  }
}
/** @define JobList */

.JobList-item {
  margin-bottom: 1.25rem;
  padding-bottom: 1.25rem;
}
/** @define Job; weak */

.Job-header {
  margin-bottom: 1.25rem;
}

.Job-role {
  color: #888;
}

.Job-title {
  margin: 0 0 0.3125rem;
}

.Job-dates {
  margin: 0.3125rem 0 0;
  color: #888;
  font-style: italic;
}

.Job-dates,
.Job-url {
  font-size: 0.875rem;
}

.Job-summary p:last-child {
  margin-bottom: 0;
}
/** @define Skill */

.Skill {
  border: 1px solid #ccc;
  background-color: #eee;
  padding: 0.1875rem 0.375rem;
  border-radius: 3px;
  margin-bottom: 0.3125rem;
  margin-right: 0.125rem;
}
/** @define ProjectList */

.ProjectList-item {
  margin-bottom: 1.25rem;
}
/** @define Project */

.Project-title {
  margin-top: 0;
  margin-bottom: 0;
}

.Project-header {
  position: relative;
  margin-bottom: 1.25rem;
}

.Project-img {
  display: inline-block;
  border: 1px solid #aaa;
  height: 200px;
}

@media (min-width: 30em) {
  .Project-img {
    height: auto;
  }
}

@media (min-width: 36.25em) {
  .Project-url {
    position: absolute;
    right: 0;
    top: 10px;
  }
}
/** @define Footer */

.Footer {
  border-top: 1px solid #eee;
}

.Footer-text {
  font-size: 0.8125rem;
  color: #aaa;
}
@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster: h5bp.com/s */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    thead {
        display: table-header-group; /* h5bp.com/t */
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }

    .Header-wrapNav, .Profile {
      display: none;
    }

}
